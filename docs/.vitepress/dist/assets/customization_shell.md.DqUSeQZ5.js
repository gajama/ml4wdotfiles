import{_ as a,c as e,o as t,ag as i,j as o}from"./chunks/framework.B7D1l-rG.js";const n="/dotfiles/shell.png",m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"customization/shell.md","filePath":"customization/shell.md","lastUpdated":null}'),h={name:"customization/shell.md"};function l(p,s,c,r,d,u){return t(),e("div",null,s[0]||(s[0]=[i('<div align="center" class="tip custom-block" style="padding-top:20px;padding-bottom:20px;"><p><strong>You can switch between zsh and bash with the ML4W Welcome App.</strong></p></div><p><img src="'+n+`" alt="image"></p><p>Click on Installation Options and change your shell.</p><h2 id="customize-the-zshrc" tabindex="-1">Customize the <code>.zshrc</code> <a class="header-anchor" href="#customize-the-zshrc" aria-label="Permalink to &quot;Customize the \`.zshrc\`&quot;">​</a></h2><p>If you want to bring in additional configurations to the zsh settings you can create a file <code>.zshrc_custom</code> in your home directory.</p><p>For more complex changes try the following possibilities.</p><p>The <code>.zshrc</code> is loading the files from folder <code>~/.config/zshrc</code> in the following order:</p><ul><li>00-init</li><li>10-aliases</li><li>20-customization</li><li>30-autostart</li></ul><p>You can inject a custom file into the loading order. If you want to inject a file after <code>20-customization</code>, create a file <code>25-my-additions</code>.</p><p>If you want to overwrite a shipped file, copy the file into the subfolder custom. That means if you want to add more plugins from <code>oh-my-posh</code>, copy the file <code>20-customization</code> into the folder custom with the same file name and make your adjustments.</p><p>Your customization is protected from ML4W Updates.</p><h3 id="oh-my-zsh" tabindex="-1">oh-my-zsh <a class="header-anchor" href="#oh-my-zsh" aria-label="Permalink to &quot;oh-my-zsh&quot;">​</a></h3><p>The zsh configuration is based on <code>oh-my-zsh</code> to manage plugins and <code>oh-my-posh</code> to setup the promt. The following plugins are installed:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    git</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    sudo</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    web-search</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    archlinux</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    zsh-autosuggestions</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    zsh-syntax-highlighting</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    fast-syntax-highlighting</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    copyfile</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    copybuffer</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    dirhistory</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="fzf" tabindex="-1">FZF <a class="header-anchor" href="#fzf" aria-label="Permalink to &quot;FZF&quot;">​</a></h3><p>The keybinding for FZF key is <code>CTRL + R</code> for fuzzy history finder</p><h3 id="oh-my-posh" tabindex="-1">oh-my-posh <a class="header-anchor" href="#oh-my-posh" aria-label="Permalink to &quot;oh-my-posh&quot;">​</a></h3><p>The promt is based on <code>oh-my-posh</code> and the awesome configuration of the minimal but powerful zen promt by <strong>Dreams of Autonomy</strong></p>`,18),o("iframe",{width:"100%",height:"400",src:"https://www.youtube.com/embed/9U8LCjuQzdc",title:"Dreams of Autonomy",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:""},null,-1),i(`<p>If you want to create your own custom theme save your configuration in <code>~/.config/ohmyposh</code> and link it like</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -----------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># oh-my-posh promt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -----------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Custom Theme</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oh-my-posh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init zsh </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.config/ohmyposh/zen.toml)&quot;</span></span></code></pre></div><p>You can use any <code>oh-my-posh</code> compatible theme by activating the following line:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Shipped Theme</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oh-my-posh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init zsh </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/oh-my-posh/themes/agnoster.omp.json)&quot;</span></span></code></pre></div><h2 id="customize-the-bashrc" tabindex="-1">Customize the <code>.bashrc</code> <a class="header-anchor" href="#customize-the-bashrc" aria-label="Permalink to &quot;Customize the \`.bashrc\`&quot;">​</a></h2><p>If you want to bring in additional configurations to the bash settings you can create a file <code>.bashrc_custom</code> in your home directory.</p><p>For more complex changes try the following possibilities.</p><p>The <code>.bashrc</code> is loading the files from folder <code>~/.config/bashrc</code> in the following order:</p><ul><li>00-init</li><li>10-aliases</li><li>20-customization</li><li>30-autostart</li></ul><p>You can inject a custom file into the loading order. If you want to inject a file after <code>20-customization</code>, create a file <code>25-my-additions</code>.</p><p>If you want to overwrite a shipped file, copy the file into the subfolder custom.</p><p>Your customization is protected from ML4W Updates.</p>`,12)]))}const g=a(h,[["render",l]]);export{m as __pageData,g as default};
